/**
 ******************************************************************************
 * @file      startup_stm32h503cbux.s
 * @author    Auto-generated by STM32CubeIDE
 * @brief     STM32H503CBUx device vector table for GCC toolchain.
 *            This module performs:
 *                - Set the initial SP
 *                - Set the initial PC == Reset_Handler,
 *                - Set the vector table entries with the exceptions ISR address
 *                - Branches to main in the C library (which eventually
 *                  calls main()).
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

.syntax unified
.cpu cortex-m33
.fpu softvfp
.thumb

.global g_pfnVectors
.global Default_Handler

/* start address for the initialization values of the .data section.
defined in linker script */
.word _sidata
/* start address for the .data section. defined in linker script */
.word _sdata
/* end address for the .data section. defined in linker script */
.word _edata
/* start address for the .bss section. defined in linker script */
.word _sbss
/* end address for the .bss section. defined in linker script */
.word _ebss

/**
 * @brief  This is the code that gets called when the processor first
 *          starts execution following a reset event. Only the absolutely
 *          necessary set is performed, after which the application
 *          supplied main() routine is called.
 * @param  None
 * @retval : None
*/

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
  mov   sp, r0          /* set stack pointer */
/* Call the clock system initialization function.*/
  bl  SystemInit

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
  ldr r1, =_edata
  ldr r2, =_sidata
  movs r3, #0
  b LoopCopyDataInit

CopyDataInit:
  ldr r4, [r2, r3]
  str r4, [r0, r3]
  adds r3, r3, #4

LoopCopyDataInit:
  adds r4, r0, r3
  cmp r4, r1
  bcc CopyDataInit

/* Zero fill the bss segment. */
  ldr r2, =_sbss
  ldr r4, =_ebss
  movs r3, #0
  b LoopFillZerobss

FillZerobss:
  str  r3, [r2]
  adds r2, r2, #4

LoopFillZerobss:
  cmp r2, r4
  bcc FillZerobss

/* Call static constructors */
  bl __libc_init_array
/* Call the application's entry point.*/
  bl main

LoopForever:
  b LoopForever

  .size Reset_Handler, .-Reset_Handler

/**
 * @brief  This is the code that gets called when the processor receives an
 *         unexpected interrupt.  This simply enters an infinite loop, preserving
 *         the system state for examination by a debugger.
 *
 * @param  None
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
  .size Default_Handler, .-Default_Handler

/******************************************************************************
*
* The STM32H503CBUx vector table.  Note that the proper constructs
* must be placed on this to ensure that it ends up at physical address
* 0x0000.0000.
*
******************************************************************************/
  .section .isr_vector,"a",%progbits
  .type g_pfnVectors, %object

g_pfnVectors:
  .word _estack
  .word Reset_Handler
  .word NMI_Handler
  .word HardFault_Handler
  .word	MemManage_Handler
  .word	BusFault_Handler
  .word	UsageFault_Handler
  .word	SecureFault_Handler
  .word	0
  .word	0
  .word	0
  .word	SVC_Handler
  .word	DebugMon_Handler
  .word	0
  .word	PendSV_Handler
  .word	SysTick_Handler
  .word	WWDG_IRQHandler                			/* Window Watchdog interrupt                                               */
  .word	0                              			/* Reserved                                                                */
  .word	RTC_IRQHandler                 			/* RTC global interrupt                                                    */
  .word	0                              			/* Reserved                                                                */
  .word	TAMP_IRQHandler                			/* TAMP global interrupt                                                   */
  .word	RAMCFG_IRQHandler              			/* RAM configuration global interrupt                                      */
  .word	FLASH_IRQHandler               			/* FLASH non-secure global interrupt                                       */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	RCC_IRQHandler                 			/* RCC global interrupt                                                    */
  .word	0                              			/* Reserved                                                                */
  .word	EXTI0_IRQHandler               			/* EXTI Line0 interrupt                                                    */
  .word	EXTI1_IRQHandler               			/* EXTI Line1 interrupt                                                    */
  .word	EXTI2_IRQHandler               			/* EXTI Line2 interrupt                                                    */
  .word	EXTI3_IRQHandler               			/* EXTI Line3 interrupt                                                    */
  .word	EXTI4_IRQHandler               			/* EXTI Line4 interrupt                                                    */
  .word	EXTI5_IRQHandler               			/* EXTI Line5 interrupt                                                    */
  .word	EXTI6_IRQHandler               			/* EXTI Line6 interrupt                                                    */
  .word	EXTI7_IRQHandler               			/* EXTI Line7 interrupt                                                    */
  .word	EXTI8_IRQHandler               			/* EXTI Line8 interrupt                                                    */
  .word	EXTI9_IRQHandler               			/* EXTI Line9 interrupt                                                    */
  .word	EXTI10_IRQHandler              			/* EXTI Line10 interrupt                                                   */
  .word	EXTI11_IRQHandler              			/* EXTI Line11 interrupt                                                   */
  .word	EXTI12_IRQHandler              			/* EXTI Line12 interrupt                                                   */
  .word	EXTI13_IRQHandler              			/* EXTI Line13 interrupt                                                   */
  .word	EXTI14_IRQHandler              			/* EXTI Line14 interrupt                                                   */
  .word	EXTI15_IRQHandler              			/* EXTI Line15 interrupt                                                   */
  .word	GPDMA1_CH0_IRQHandler          			/* GPDMA1 channel 0 global interrupt                                       */
  .word	GPDMA1_CH1_IRQHandler          			/* GPDMA1 channel 1 global interrupt                                       */
  .word	GPDMA1_CH2_IRQHandler          			/* GPDMA1 channel 2 global interrupt                                       */
  .word	GPDMA1_CH3_IRQHandler          			/* GPDMA1 channel 3 global interrupt                                       */
  .word	GPDMA1_CH4_IRQHandler          			/* GPDMA1 channel 4 global interrupt                                       */
  .word	GPDMA1_CH5_IRQHandler          			/* GPDMA1 channel 5 global interrupt                                       */
  .word	GPDMA1_CH6_IRQHandler          			/* GPDMA1 channel 6 global interrupt                                       */
  .word	GPDMA1_CH7_IRQHandler          			/* GPDMA1 channel 7 global interrupt                                       */
  .word	IWDG_IRQHandler                			/* IWDG interrupt                                                          */
  .word	0                              			/* Reserved                                                                */
  .word	ADC1_IRQHandler                			/* ADC1 global interrupt                                                   */
  .word	DAC1_IRQHandler                			/* DAC1 global interrupt                                                   */
  .word	FDCAN1_IT0_IRQHandler          			/* FDCAN1 interrupt 0                                                      */
  .word	FDCAN1_IT1_IRQHandler          			/* FDCAN1 interrupt 1                                                      */
  .word	TIM1_BRK_TERR_IERR_IRQHandler  			/* TIM1 break/TIM1 transition error/TIM1 index error                       */
  .word	TIM1_UP_IRQHandler             			/* TIM1 Update                                                             */
  .word	TIM1_TRG_COM_DIR_IDX_IRQHandler			/* TIM1 trigger and commutation/TIM1 direction change interrupt/TIM1 index */
  .word	TIM1_CC_IRQHandler             			/* TIM1 capture compare interrupt                                          */
  .word	TIM2_IRQHandler                			/* TIM2 global interrupt                                                   */
  .word	TIM3_IRQHandler                			/* TIM3 global interrupt                                                   */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	TIM6_IRQHandler                			/* TIM6 global interrupt                                                   */
  .word	TIM7_IRQHandler                			/* TIM7 global interrupt                                                   */
  .word	I2C1_EV_IRQHandler             			/* I2C1 event interrupt                                                    */
  .word	I2C1_ER_IRQHandler             			/* I2C1 error interrupt                                                    */
  .word	I2C2_EV_IRQHandler             			/* I2C2 event interrupt                                                    */
  .word	I2C2_ER_IRQHandler             			/* I2C2 error interrupt                                                    */
  .word	SPI1_IRQHandler                			/* SPI1 global interrupt                                                   */
  .word	SPI2_IRQHandler                			/* SPI2 global interrupt                                                   */
  .word	SPI3_IRQHandler                			/* SPI3 global interrupt                                                   */
  .word	USART1_IRQHandler              			/* USART1 global interrupt                                                 */
  .word	USART2_IRQHandler              			/* USART2 global interrupt                                                 */
  .word	USART3_IRQHandler              			/* USART3 global interrupt                                                 */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	LPUART1_IRQHandler             			/* LPUART1 global interrupt                                                */
  .word	LPTIM1_IRQHandler              			/* LPTIM1 global interrupt                                                 */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	LPTIM2_IRQHandler              			/* LPTIM2 global interrupt                                                 */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	USB_FS_IRQHandler              			/* USB OTG FS global interrupt                                             */
  .word	CRS_IRQHandler                 			/* Clock Recovery System global interrupt                                  */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	GPDMA2_CH0_IRQHandler          			/* GPDMA2 channel 0 global interrupt                                       */
  .word	GPDMA2_CH1_IRQHandler          			/* GPDMA2 channel 1 global interrupt                                       */
  .word	GPDMA2_CH2_IRQHandler          			/* GPDMA2 channel 2 global interrupt                                       */
  .word	GPDMA2_CH3_IRQHandler          			/* GPDMA2 channel 3 global interrupt                                       */
  .word	GPDMA2_CH4_IRQHandler          			/* GPDMA2 channel 4 global interrupt                                       */
  .word	GPDMA2_CH5_IRQHandler          			/* GPDMA2 channel 5 global interrupt                                       */
  .word	GPDMA2_CH6_IRQHandler          			/* GPDMA2 channel 6 global interrupt                                       */
  .word	GPDMA2_CH7_IRQHandler          			/* GPDMA2 channel 7 global interrupt                                       */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	ICACHE_IRQHandler              			/* Instruction cache global interrupt                                      */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	DTS_WKUP_IRQHandler            			/* DTS interrupt or DTS AIT through EXTI line                              */
  .word	RNG_IRQHandler                 			/* RNG global interrupt                                                    */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	HASH_IRQHandler                			/* HASH interrupt                                                          */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	I3C1_EV_IRQHandler             			/* I3C1 event interrupt                                                    */
  .word	I3C1_ER_IRQHandler             			/* I3C1 error interrupt                                                    */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	0                              			/* Reserved                                                                */
  .word	I3C2_EV_IRQHandler             			/* I3C2 event interrupt                                                    */
  .word	I3C2_ER_IRQHandler             			/* I3C2 error interrupt                                                    */
  .word	COMP_IRQHandler                			/* COMP global interrupt                                                   */
  .size g_pfnVectors, .-g_pfnVectors

/*******************************************************************************
*
* Provide weak aliases for each Exception handler to the Default_Handler.
* As they are weak aliases, any function with the same name will override
* this definition.
*
*******************************************************************************/

	.weak	NMI_Handler
	.thumb_set NMI_Handler,Default_Handler

	.weak	HardFault_Handler
	.thumb_set HardFault_Handler,Default_Handler

	.weak	MemManage_Handler
	.thumb_set MemManage_Handler,Default_Handler

	.weak	BusFault_Handler
	.thumb_set BusFault_Handler,Default_Handler

	.weak	UsageFault_Handler
	.thumb_set UsageFault_Handler,Default_Handler

	.weak	SecureFault_Handler
	.thumb_set SecureFault_Handler,Default_Handler

	.weak	SVC_Handler
	.thumb_set SVC_Handler,Default_Handler

	.weak	DebugMon_Handler
	.thumb_set DebugMon_Handler,Default_Handler

	.weak	PendSV_Handler
	.thumb_set PendSV_Handler,Default_Handler

	.weak	SysTick_Handler
	.thumb_set SysTick_Handler,Default_Handler

	.weak	WWDG_IRQHandler
	.thumb_set WWDG_IRQHandler,Default_Handler

	.weak	RTC_IRQHandler
	.thumb_set RTC_IRQHandler,Default_Handler

	.weak	TAMP_IRQHandler
	.thumb_set TAMP_IRQHandler,Default_Handler

	.weak	RAMCFG_IRQHandler
	.thumb_set RAMCFG_IRQHandler,Default_Handler

	.weak	FLASH_IRQHandler
	.thumb_set FLASH_IRQHandler,Default_Handler

	.weak	RCC_IRQHandler
	.thumb_set RCC_IRQHandler,Default_Handler

	.weak	EXTI0_IRQHandler
	.thumb_set EXTI0_IRQHandler,Default_Handler

	.weak	EXTI1_IRQHandler
	.thumb_set EXTI1_IRQHandler,Default_Handler

	.weak	EXTI2_IRQHandler
	.thumb_set EXTI2_IRQHandler,Default_Handler

	.weak	EXTI3_IRQHandler
	.thumb_set EXTI3_IRQHandler,Default_Handler

	.weak	EXTI4_IRQHandler
	.thumb_set EXTI4_IRQHandler,Default_Handler

	.weak	EXTI5_IRQHandler
	.thumb_set EXTI5_IRQHandler,Default_Handler

	.weak	EXTI6_IRQHandler
	.thumb_set EXTI6_IRQHandler,Default_Handler

	.weak	EXTI7_IRQHandler
	.thumb_set EXTI7_IRQHandler,Default_Handler

	.weak	EXTI8_IRQHandler
	.thumb_set EXTI8_IRQHandler,Default_Handler

	.weak	EXTI9_IRQHandler
	.thumb_set EXTI9_IRQHandler,Default_Handler

	.weak	EXTI10_IRQHandler
	.thumb_set EXTI10_IRQHandler,Default_Handler

	.weak	EXTI11_IRQHandler
	.thumb_set EXTI11_IRQHandler,Default_Handler

	.weak	EXTI12_IRQHandler
	.thumb_set EXTI12_IRQHandler,Default_Handler

	.weak	EXTI13_IRQHandler
	.thumb_set EXTI13_IRQHandler,Default_Handler

	.weak	EXTI14_IRQHandler
	.thumb_set EXTI14_IRQHandler,Default_Handler

	.weak	EXTI15_IRQHandler
	.thumb_set EXTI15_IRQHandler,Default_Handler

	.weak	GPDMA1_CH0_IRQHandler
	.thumb_set GPDMA1_CH0_IRQHandler,Default_Handler

	.weak	GPDMA1_CH1_IRQHandler
	.thumb_set GPDMA1_CH1_IRQHandler,Default_Handler

	.weak	GPDMA1_CH2_IRQHandler
	.thumb_set GPDMA1_CH2_IRQHandler,Default_Handler

	.weak	GPDMA1_CH3_IRQHandler
	.thumb_set GPDMA1_CH3_IRQHandler,Default_Handler

	.weak	GPDMA1_CH4_IRQHandler
	.thumb_set GPDMA1_CH4_IRQHandler,Default_Handler

	.weak	GPDMA1_CH5_IRQHandler
	.thumb_set GPDMA1_CH5_IRQHandler,Default_Handler

	.weak	GPDMA1_CH6_IRQHandler
	.thumb_set GPDMA1_CH6_IRQHandler,Default_Handler

	.weak	GPDMA1_CH7_IRQHandler
	.thumb_set GPDMA1_CH7_IRQHandler,Default_Handler

	.weak	IWDG_IRQHandler
	.thumb_set IWDG_IRQHandler,Default_Handler

	.weak	ADC1_IRQHandler
	.thumb_set ADC1_IRQHandler,Default_Handler

	.weak	DAC1_IRQHandler
	.thumb_set DAC1_IRQHandler,Default_Handler

	.weak	FDCAN1_IT0_IRQHandler
	.thumb_set FDCAN1_IT0_IRQHandler,Default_Handler

	.weak	FDCAN1_IT1_IRQHandler
	.thumb_set FDCAN1_IT1_IRQHandler,Default_Handler

	.weak	TIM1_BRK_TERR_IERR_IRQHandler
	.thumb_set TIM1_BRK_TERR_IERR_IRQHandler,Default_Handler

	.weak	TIM1_UP_IRQHandler
	.thumb_set TIM1_UP_IRQHandler,Default_Handler

	.weak	TIM1_TRG_COM_DIR_IDX_IRQHandler
	.thumb_set TIM1_TRG_COM_DIR_IDX_IRQHandler,Default_Handler

	.weak	TIM1_CC_IRQHandler
	.thumb_set TIM1_CC_IRQHandler,Default_Handler

	.weak	TIM2_IRQHandler
	.thumb_set TIM2_IRQHandler,Default_Handler

	.weak	TIM3_IRQHandler
	.thumb_set TIM3_IRQHandler,Default_Handler

	.weak	TIM6_IRQHandler
	.thumb_set TIM6_IRQHandler,Default_Handler

	.weak	TIM7_IRQHandler
	.thumb_set TIM7_IRQHandler,Default_Handler

	.weak	I2C1_EV_IRQHandler
	.thumb_set I2C1_EV_IRQHandler,Default_Handler

	.weak	I2C1_ER_IRQHandler
	.thumb_set I2C1_ER_IRQHandler,Default_Handler

	.weak	I2C2_EV_IRQHandler
	.thumb_set I2C2_EV_IRQHandler,Default_Handler

	.weak	I2C2_ER_IRQHandler
	.thumb_set I2C2_ER_IRQHandler,Default_Handler

	.weak	SPI1_IRQHandler
	.thumb_set SPI1_IRQHandler,Default_Handler

	.weak	SPI2_IRQHandler
	.thumb_set SPI2_IRQHandler,Default_Handler

	.weak	SPI3_IRQHandler
	.thumb_set SPI3_IRQHandler,Default_Handler

	.weak	USART1_IRQHandler
	.thumb_set USART1_IRQHandler,Default_Handler

	.weak	USART2_IRQHandler
	.thumb_set USART2_IRQHandler,Default_Handler

	.weak	USART3_IRQHandler
	.thumb_set USART3_IRQHandler,Default_Handler

	.weak	LPUART1_IRQHandler
	.thumb_set LPUART1_IRQHandler,Default_Handler

	.weak	LPTIM1_IRQHandler
	.thumb_set LPTIM1_IRQHandler,Default_Handler

	.weak	LPTIM2_IRQHandler
	.thumb_set LPTIM2_IRQHandler,Default_Handler

	.weak	USB_FS_IRQHandler
	.thumb_set USB_FS_IRQHandler,Default_Handler

	.weak	CRS_IRQHandler
	.thumb_set CRS_IRQHandler,Default_Handler

	.weak	GPDMA2_CH0_IRQHandler
	.thumb_set GPDMA2_CH0_IRQHandler,Default_Handler

	.weak	GPDMA2_CH1_IRQHandler
	.thumb_set GPDMA2_CH1_IRQHandler,Default_Handler

	.weak	GPDMA2_CH2_IRQHandler
	.thumb_set GPDMA2_CH2_IRQHandler,Default_Handler

	.weak	GPDMA2_CH3_IRQHandler
	.thumb_set GPDMA2_CH3_IRQHandler,Default_Handler

	.weak	GPDMA2_CH4_IRQHandler
	.thumb_set GPDMA2_CH4_IRQHandler,Default_Handler

	.weak	GPDMA2_CH5_IRQHandler
	.thumb_set GPDMA2_CH5_IRQHandler,Default_Handler

	.weak	GPDMA2_CH6_IRQHandler
	.thumb_set GPDMA2_CH6_IRQHandler,Default_Handler

	.weak	GPDMA2_CH7_IRQHandler
	.thumb_set GPDMA2_CH7_IRQHandler,Default_Handler

	.weak	ICACHE_IRQHandler
	.thumb_set ICACHE_IRQHandler,Default_Handler

	.weak	DTS_WKUP_IRQHandler
	.thumb_set DTS_WKUP_IRQHandler,Default_Handler

	.weak	RNG_IRQHandler
	.thumb_set RNG_IRQHandler,Default_Handler

	.weak	HASH_IRQHandler
	.thumb_set HASH_IRQHandler,Default_Handler

	.weak	I3C1_EV_IRQHandler
	.thumb_set I3C1_EV_IRQHandler,Default_Handler

	.weak	I3C1_ER_IRQHandler
	.thumb_set I3C1_ER_IRQHandler,Default_Handler

	.weak	I3C2_EV_IRQHandler
	.thumb_set I3C2_EV_IRQHandler,Default_Handler

	.weak	I3C2_ER_IRQHandler
	.thumb_set I3C2_ER_IRQHandler,Default_Handler

	.weak	COMP_IRQHandler
	.thumb_set COMP_IRQHandler,Default_Handler

	.weak	SystemInit

/************************ (C) COPYRIGHT STMicroelectonics *****END OF FILE****/
